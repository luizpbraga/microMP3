version: "3"

services:
  auth:
    container_name: auth
    build:
      context: ./services/auth/
    restart: always
    env_file:
      - .env
    environment:
      - API_SECRET=$API_SECRET
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
    ports:
      - "8080:8080"
    # volumes:
    #   - ./:/app
    depends_on:
      - "db"

  db:
    container_name: mysql
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
    volumes:
      - ./databases/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/mysql

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./databases/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - mongo-network
    environment:
      - MONGO_INITDB_DATABASE=videos # Define o nome do banco de dados a ser criado
    command: ["--bind_ip_all"]

  gateway:
    build:
      context: ./services/gateway/
    restart: always
    container_name: gateway
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/videos
    ports:
      - "8081:8080"
    depends_on:
      - mongodb
    networks:
      - mongo-network

networks:
  mongo-network:

volumes:
  db-data:
  mongodb-data:
